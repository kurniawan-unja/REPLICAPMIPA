2024-10-14 11:16:33,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:16:33,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:16:33,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:16:33,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:18:41,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:18:41,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:18:41,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:18:41,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:23:45,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:23:45,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:23:45,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:23:45,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:30:17,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:30:17,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:30:17,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:30:17,987:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:34:49,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:34:49,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:34:49,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:34:49,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 11:37:02,461:INFO:PyCaret ClassificationExperiment
2024-10-14 11:37:02,461:INFO:Logging name: clf-default-name
2024-10-14 11:37:02,461:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 11:37:02,461:INFO:version 3.3.2
2024-10-14 11:37:02,461:INFO:Initializing setup()
2024-10-14 11:37:02,461:INFO:self.USI: bfe4
2024-10-14 11:37:02,461:INFO:self._variable_keys: {'fold_groups_param', 'memory', 'gpu_param', 'fold_generator', 'y_train', 'X_train', 'target_param', 'fold_shuffle_param', '_available_plots', 'gpu_n_jobs_param', 'seed', 'y_test', 'fix_imbalance', 'X', '_ml_usecase', 'logging_param', 'log_plots_param', 'html_param', 'n_jobs_param', 'USI', 'exp_name_log', 'pipeline', 'y', 'is_multiclass', 'X_test', 'idx', 'exp_id', 'data'}
2024-10-14 11:37:02,461:INFO:Checking environment
2024-10-14 11:37:02,461:INFO:python_version: 3.11.4
2024-10-14 11:37:02,461:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-10-14 11:37:02,461:INFO:machine: AMD64
2024-10-14 11:37:02,476:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 11:37:02,483:INFO:Memory: svmem(total=8254660608, available=635383808, percent=92.3, used=7619276800, free=635383808)
2024-10-14 11:37:02,483:INFO:Physical Core: 4
2024-10-14 11:37:02,483:INFO:Logical Core: 8
2024-10-14 11:37:02,483:INFO:Checking libraries
2024-10-14 11:37:02,483:INFO:System:
2024-10-14 11:37:02,483:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-10-14 11:37:02,483:INFO:executable: D:\REPLICA\.venv\Scripts\python.exe
2024-10-14 11:37:02,483:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 11:37:02,483:INFO:PyCaret required dependencies:
2024-10-14 11:37:02,754:INFO:                 pip: 24.2
2024-10-14 11:37:02,754:INFO:          setuptools: 65.5.0
2024-10-14 11:37:02,754:INFO:             pycaret: 3.3.2
2024-10-14 11:37:02,754:INFO:             IPython: 8.28.0
2024-10-14 11:37:02,754:INFO:          ipywidgets: 8.1.5
2024-10-14 11:37:02,754:INFO:                tqdm: 4.66.5
2024-10-14 11:37:02,754:INFO:               numpy: 1.26.4
2024-10-14 11:37:02,754:INFO:              pandas: 2.1.4
2024-10-14 11:37:02,754:INFO:              jinja2: 3.1.4
2024-10-14 11:37:02,754:INFO:               scipy: 1.11.4
2024-10-14 11:37:02,754:INFO:              joblib: 1.1.1
2024-10-14 11:37:02,754:INFO:             sklearn: 1.4.2
2024-10-14 11:37:02,754:INFO:                pyod: 2.0.2
2024-10-14 11:37:02,755:INFO:            imblearn: 0.12.4
2024-10-14 11:37:02,755:INFO:   category_encoders: 2.6.4
2024-10-14 11:37:02,755:INFO:            lightgbm: 4.5.0
2024-10-14 11:37:02,755:INFO:               numba: 0.60.0
2024-10-14 11:37:02,755:INFO:            requests: 2.32.3
2024-10-14 11:37:02,755:INFO:          matplotlib: 3.7.5
2024-10-14 11:37:02,755:INFO:          scikitplot: 0.3.7
2024-10-14 11:37:02,755:INFO:         yellowbrick: 1.5
2024-10-14 11:37:02,755:INFO:              plotly: 5.24.1
2024-10-14 11:37:02,755:INFO:    plotly-resampler: Not installed
2024-10-14 11:37:02,755:INFO:             kaleido: 0.2.1
2024-10-14 11:37:02,755:INFO:           schemdraw: 0.15
2024-10-14 11:37:02,755:INFO:         statsmodels: 0.14.4
2024-10-14 11:37:02,755:INFO:              sktime: 0.26.0
2024-10-14 11:37:02,755:INFO:               tbats: 1.1.3
2024-10-14 11:37:02,755:INFO:            pmdarima: 2.0.4
2024-10-14 11:37:02,755:INFO:              psutil: 6.0.0
2024-10-14 11:37:02,755:INFO:          markupsafe: 2.1.5
2024-10-14 11:37:02,755:INFO:             pickle5: Not installed
2024-10-14 11:37:02,755:INFO:         cloudpickle: 3.1.0
2024-10-14 11:37:02,755:INFO:         deprecation: 2.1.0
2024-10-14 11:37:02,755:INFO:              xxhash: 3.5.0
2024-10-14 11:37:02,755:INFO:           wurlitzer: Not installed
2024-10-14 11:37:02,755:INFO:PyCaret optional dependencies:
2024-10-14 11:37:02,761:INFO:                shap: Not installed
2024-10-14 11:37:02,761:INFO:           interpret: Not installed
2024-10-14 11:37:02,761:INFO:                umap: Not installed
2024-10-14 11:37:02,761:INFO:     ydata_profiling: 4.10.0
2024-10-14 11:37:02,761:INFO:  explainerdashboard: Not installed
2024-10-14 11:37:02,761:INFO:             autoviz: Not installed
2024-10-14 11:37:02,761:INFO:           fairlearn: Not installed
2024-10-14 11:37:02,761:INFO:          deepchecks: Not installed
2024-10-14 11:37:02,761:INFO:             xgboost: Not installed
2024-10-14 11:37:02,761:INFO:            catboost: Not installed
2024-10-14 11:37:02,761:INFO:              kmodes: Not installed
2024-10-14 11:37:02,761:INFO:             mlxtend: Not installed
2024-10-14 11:37:02,761:INFO:       statsforecast: Not installed
2024-10-14 11:37:02,761:INFO:        tune_sklearn: Not installed
2024-10-14 11:37:02,761:INFO:                 ray: Not installed
2024-10-14 11:37:02,761:INFO:            hyperopt: Not installed
2024-10-14 11:37:02,761:INFO:              optuna: Not installed
2024-10-14 11:37:02,761:INFO:               skopt: Not installed
2024-10-14 11:37:02,761:INFO:              mlflow: Not installed
2024-10-14 11:37:02,761:INFO:              gradio: Not installed
2024-10-14 11:37:02,761:INFO:             fastapi: Not installed
2024-10-14 11:37:02,761:INFO:             uvicorn: Not installed
2024-10-14 11:37:02,761:INFO:              m2cgen: Not installed
2024-10-14 11:37:02,761:INFO:           evidently: Not installed
2024-10-14 11:37:02,761:INFO:               fugue: Not installed
2024-10-14 11:37:02,761:INFO:           streamlit: 1.39.0
2024-10-14 11:37:02,761:INFO:             prophet: Not installed
2024-10-14 11:37:02,761:INFO:None
2024-10-14 11:37:02,761:INFO:Set up data.
2024-10-14 11:37:02,767:INFO:Set up folding strategy.
2024-10-14 11:37:02,767:INFO:Set up train/test split.
2024-10-14 11:37:35,000:INFO:PyCaret ClassificationExperiment
2024-10-14 11:37:35,001:INFO:Logging name: clf-default-name
2024-10-14 11:37:35,004:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 11:37:35,005:INFO:version 3.3.2
2024-10-14 11:37:35,005:INFO:Initializing setup()
2024-10-14 11:37:35,005:INFO:self.USI: d970
2024-10-14 11:37:35,005:INFO:self._variable_keys: {'fold_groups_param', 'memory', 'gpu_param', 'fold_generator', 'y_train', 'X_train', 'target_param', 'fold_shuffle_param', '_available_plots', 'gpu_n_jobs_param', 'seed', 'y_test', 'fix_imbalance', 'X', '_ml_usecase', 'logging_param', 'log_plots_param', 'html_param', 'n_jobs_param', 'USI', 'exp_name_log', 'pipeline', 'y', 'is_multiclass', 'X_test', 'idx', 'exp_id', 'data'}
2024-10-14 11:37:35,005:INFO:Checking environment
2024-10-14 11:37:35,006:INFO:python_version: 3.11.4
2024-10-14 11:37:35,006:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-10-14 11:37:35,006:INFO:machine: AMD64
2024-10-14 11:37:35,006:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 11:37:35,012:INFO:Memory: svmem(total=8254660608, available=523268096, percent=93.7, used=7731392512, free=523268096)
2024-10-14 11:37:35,013:INFO:Physical Core: 4
2024-10-14 11:37:35,013:INFO:Logical Core: 8
2024-10-14 11:37:35,013:INFO:Checking libraries
2024-10-14 11:37:35,013:INFO:System:
2024-10-14 11:37:35,013:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-10-14 11:37:35,013:INFO:executable: D:\REPLICA\.venv\Scripts\python.exe
2024-10-14 11:37:35,013:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 11:37:35,013:INFO:PyCaret required dependencies:
2024-10-14 11:37:35,013:INFO:                 pip: 24.2
2024-10-14 11:37:35,013:INFO:          setuptools: 65.5.0
2024-10-14 11:37:35,013:INFO:             pycaret: 3.3.2
2024-10-14 11:37:35,013:INFO:             IPython: 8.28.0
2024-10-14 11:37:35,013:INFO:          ipywidgets: 8.1.5
2024-10-14 11:37:35,013:INFO:                tqdm: 4.66.5
2024-10-14 11:37:35,013:INFO:               numpy: 1.26.4
2024-10-14 11:37:35,013:INFO:              pandas: 2.1.4
2024-10-14 11:37:35,014:INFO:              jinja2: 3.1.4
2024-10-14 11:37:35,014:INFO:               scipy: 1.11.4
2024-10-14 11:37:35,014:INFO:              joblib: 1.1.1
2024-10-14 11:37:35,014:INFO:             sklearn: 1.4.2
2024-10-14 11:37:35,014:INFO:                pyod: 2.0.2
2024-10-14 11:37:35,014:INFO:            imblearn: 0.12.4
2024-10-14 11:37:35,014:INFO:   category_encoders: 2.6.4
2024-10-14 11:37:35,014:INFO:            lightgbm: 4.5.0
2024-10-14 11:37:35,014:INFO:               numba: 0.60.0
2024-10-14 11:37:35,014:INFO:            requests: 2.32.3
2024-10-14 11:37:35,014:INFO:          matplotlib: 3.7.5
2024-10-14 11:37:35,014:INFO:          scikitplot: 0.3.7
2024-10-14 11:37:35,014:INFO:         yellowbrick: 1.5
2024-10-14 11:37:35,014:INFO:              plotly: 5.24.1
2024-10-14 11:37:35,014:INFO:    plotly-resampler: Not installed
2024-10-14 11:37:35,014:INFO:             kaleido: 0.2.1
2024-10-14 11:37:35,014:INFO:           schemdraw: 0.15
2024-10-14 11:37:35,014:INFO:         statsmodels: 0.14.4
2024-10-14 11:37:35,014:INFO:              sktime: 0.26.0
2024-10-14 11:37:35,014:INFO:               tbats: 1.1.3
2024-10-14 11:37:35,015:INFO:            pmdarima: 2.0.4
2024-10-14 11:37:35,015:INFO:              psutil: 6.0.0
2024-10-14 11:37:35,015:INFO:          markupsafe: 2.1.5
2024-10-14 11:37:35,015:INFO:             pickle5: Not installed
2024-10-14 11:37:35,016:INFO:         cloudpickle: 3.1.0
2024-10-14 11:37:35,016:INFO:         deprecation: 2.1.0
2024-10-14 11:37:35,016:INFO:              xxhash: 3.5.0
2024-10-14 11:37:35,016:INFO:           wurlitzer: Not installed
2024-10-14 11:37:35,016:INFO:PyCaret optional dependencies:
2024-10-14 11:37:35,016:INFO:                shap: Not installed
2024-10-14 11:37:35,016:INFO:           interpret: Not installed
2024-10-14 11:37:35,016:INFO:                umap: Not installed
2024-10-14 11:37:35,016:INFO:     ydata_profiling: 4.10.0
2024-10-14 11:37:35,016:INFO:  explainerdashboard: Not installed
2024-10-14 11:37:35,016:INFO:             autoviz: Not installed
2024-10-14 11:37:35,016:INFO:           fairlearn: Not installed
2024-10-14 11:37:35,017:INFO:          deepchecks: Not installed
2024-10-14 11:37:35,017:INFO:             xgboost: Not installed
2024-10-14 11:37:35,018:INFO:            catboost: Not installed
2024-10-14 11:37:35,018:INFO:              kmodes: Not installed
2024-10-14 11:37:35,018:INFO:             mlxtend: Not installed
2024-10-14 11:37:35,018:INFO:       statsforecast: Not installed
2024-10-14 11:37:35,018:INFO:        tune_sklearn: Not installed
2024-10-14 11:37:35,019:INFO:                 ray: Not installed
2024-10-14 11:37:35,019:INFO:            hyperopt: Not installed
2024-10-14 11:37:35,019:INFO:              optuna: Not installed
2024-10-14 11:37:35,020:INFO:               skopt: Not installed
2024-10-14 11:37:35,020:INFO:              mlflow: Not installed
2024-10-14 11:37:35,020:INFO:              gradio: Not installed
2024-10-14 11:37:35,020:INFO:             fastapi: Not installed
2024-10-14 11:37:35,020:INFO:             uvicorn: Not installed
2024-10-14 11:37:35,020:INFO:              m2cgen: Not installed
2024-10-14 11:37:35,020:INFO:           evidently: Not installed
2024-10-14 11:37:35,020:INFO:               fugue: Not installed
2024-10-14 11:37:35,020:INFO:           streamlit: 1.39.0
2024-10-14 11:37:35,020:INFO:             prophet: Not installed
2024-10-14 11:37:35,020:INFO:None
2024-10-14 11:37:35,020:INFO:Set up data.
2024-10-14 11:37:35,028:INFO:Set up folding strategy.
2024-10-14 11:37:35,028:INFO:Set up train/test split.
2024-10-14 11:38:09,714:INFO:PyCaret ClassificationExperiment
2024-10-14 11:38:09,714:INFO:Logging name: clf-default-name
2024-10-14 11:38:09,715:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-10-14 11:38:09,715:INFO:version 3.3.2
2024-10-14 11:38:09,715:INFO:Initializing setup()
2024-10-14 11:38:09,715:INFO:self.USI: 3ee9
2024-10-14 11:38:09,715:INFO:self._variable_keys: {'fold_groups_param', 'memory', 'gpu_param', 'fold_generator', 'y_train', 'X_train', 'target_param', 'fold_shuffle_param', '_available_plots', 'gpu_n_jobs_param', 'seed', 'y_test', 'fix_imbalance', 'X', '_ml_usecase', 'logging_param', 'log_plots_param', 'html_param', 'n_jobs_param', 'USI', 'exp_name_log', 'pipeline', 'y', 'is_multiclass', 'X_test', 'idx', 'exp_id', 'data'}
2024-10-14 11:38:09,715:INFO:Checking environment
2024-10-14 11:38:09,715:INFO:python_version: 3.11.4
2024-10-14 11:38:09,715:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-10-14 11:38:09,715:INFO:machine: AMD64
2024-10-14 11:38:09,715:INFO:platform: Windows-10-10.0.22631-SP0
2024-10-14 11:38:09,723:INFO:Memory: svmem(total=8254660608, available=650739712, percent=92.1, used=7603920896, free=650739712)
2024-10-14 11:38:09,724:INFO:Physical Core: 4
2024-10-14 11:38:09,724:INFO:Logical Core: 8
2024-10-14 11:38:09,724:INFO:Checking libraries
2024-10-14 11:38:09,724:INFO:System:
2024-10-14 11:38:09,724:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-10-14 11:38:09,724:INFO:executable: D:\REPLICA\.venv\Scripts\python.exe
2024-10-14 11:38:09,724:INFO:   machine: Windows-10-10.0.22631-SP0
2024-10-14 11:38:09,724:INFO:PyCaret required dependencies:
2024-10-14 11:38:09,726:INFO:                 pip: 24.2
2024-10-14 11:38:09,726:INFO:          setuptools: 65.5.0
2024-10-14 11:38:09,726:INFO:             pycaret: 3.3.2
2024-10-14 11:38:09,726:INFO:             IPython: 8.28.0
2024-10-14 11:38:09,726:INFO:          ipywidgets: 8.1.5
2024-10-14 11:38:09,726:INFO:                tqdm: 4.66.5
2024-10-14 11:38:09,727:INFO:               numpy: 1.26.4
2024-10-14 11:38:09,727:INFO:              pandas: 2.1.4
2024-10-14 11:38:09,727:INFO:              jinja2: 3.1.4
2024-10-14 11:38:09,727:INFO:               scipy: 1.11.4
2024-10-14 11:38:09,727:INFO:              joblib: 1.1.1
2024-10-14 11:38:09,727:INFO:             sklearn: 1.4.2
2024-10-14 11:38:09,727:INFO:                pyod: 2.0.2
2024-10-14 11:38:09,727:INFO:            imblearn: 0.12.4
2024-10-14 11:38:09,727:INFO:   category_encoders: 2.6.4
2024-10-14 11:38:09,727:INFO:            lightgbm: 4.5.0
2024-10-14 11:38:09,727:INFO:               numba: 0.60.0
2024-10-14 11:38:09,727:INFO:            requests: 2.32.3
2024-10-14 11:38:09,727:INFO:          matplotlib: 3.7.5
2024-10-14 11:38:09,727:INFO:          scikitplot: 0.3.7
2024-10-14 11:38:09,727:INFO:         yellowbrick: 1.5
2024-10-14 11:38:09,727:INFO:              plotly: 5.24.1
2024-10-14 11:38:09,727:INFO:    plotly-resampler: Not installed
2024-10-14 11:38:09,727:INFO:             kaleido: 0.2.1
2024-10-14 11:38:09,727:INFO:           schemdraw: 0.15
2024-10-14 11:38:09,727:INFO:         statsmodels: 0.14.4
2024-10-14 11:38:09,727:INFO:              sktime: 0.26.0
2024-10-14 11:38:09,727:INFO:               tbats: 1.1.3
2024-10-14 11:38:09,727:INFO:            pmdarima: 2.0.4
2024-10-14 11:38:09,727:INFO:              psutil: 6.0.0
2024-10-14 11:38:09,727:INFO:          markupsafe: 2.1.5
2024-10-14 11:38:09,727:INFO:             pickle5: Not installed
2024-10-14 11:38:09,727:INFO:         cloudpickle: 3.1.0
2024-10-14 11:38:09,727:INFO:         deprecation: 2.1.0
2024-10-14 11:38:09,727:INFO:              xxhash: 3.5.0
2024-10-14 11:38:09,727:INFO:           wurlitzer: Not installed
2024-10-14 11:38:09,727:INFO:PyCaret optional dependencies:
2024-10-14 11:38:09,727:INFO:                shap: Not installed
2024-10-14 11:38:09,727:INFO:           interpret: Not installed
2024-10-14 11:38:09,727:INFO:                umap: Not installed
2024-10-14 11:38:09,727:INFO:     ydata_profiling: 4.10.0
2024-10-14 11:38:09,727:INFO:  explainerdashboard: Not installed
2024-10-14 11:38:09,727:INFO:             autoviz: Not installed
2024-10-14 11:38:09,727:INFO:           fairlearn: Not installed
2024-10-14 11:38:09,727:INFO:          deepchecks: Not installed
2024-10-14 11:38:09,727:INFO:             xgboost: Not installed
2024-10-14 11:38:09,727:INFO:            catboost: Not installed
2024-10-14 11:38:09,727:INFO:              kmodes: Not installed
2024-10-14 11:38:09,727:INFO:             mlxtend: Not installed
2024-10-14 11:38:09,727:INFO:       statsforecast: Not installed
2024-10-14 11:38:09,727:INFO:        tune_sklearn: Not installed
2024-10-14 11:38:09,727:INFO:                 ray: Not installed
2024-10-14 11:38:09,727:INFO:            hyperopt: Not installed
2024-10-14 11:38:09,727:INFO:              optuna: Not installed
2024-10-14 11:38:09,727:INFO:               skopt: Not installed
2024-10-14 11:38:09,727:INFO:              mlflow: Not installed
2024-10-14 11:38:09,727:INFO:              gradio: Not installed
2024-10-14 11:38:09,727:INFO:             fastapi: Not installed
2024-10-14 11:38:09,727:INFO:             uvicorn: Not installed
2024-10-14 11:38:09,727:INFO:              m2cgen: Not installed
2024-10-14 11:38:09,727:INFO:           evidently: Not installed
2024-10-14 11:38:09,727:INFO:               fugue: Not installed
2024-10-14 11:38:09,728:INFO:           streamlit: 1.39.0
2024-10-14 11:38:09,728:INFO:             prophet: Not installed
2024-10-14 11:38:09,728:INFO:None
2024-10-14 11:38:09,728:INFO:Set up data.
2024-10-14 11:38:09,733:INFO:Set up folding strategy.
2024-10-14 11:38:09,733:INFO:Set up train/test split.
2024-10-14 11:38:09,743:INFO:Set up index.
2024-10-14 11:38:09,743:INFO:Assigning column types.
2024-10-14 11:38:09,745:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-14 11:38:09,781:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 11:38:09,785:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 11:38:09,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:09,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:09,863:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-14 11:38:09,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 11:38:09,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:09,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:09,887:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-14 11:38:09,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 11:38:09,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:09,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:09,989:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-10-14 11:38:10,013:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,013:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-10-14 11:38:10,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,151:INFO:Preparing preprocessing pipeline...
2024-10-14 11:38:10,156:INFO:Set up label encoding.
2024-10-14 11:38:10,156:INFO:Set up simple imputation.
2024-10-14 11:38:10,160:INFO:Set up encoding of ordinal features.
2024-10-14 11:38:10,161:INFO:Set up encoding of categorical features.
2024-10-14 11:38:10,162:INFO:Set up column name cleaning.
2024-10-14 11:38:10,272:INFO:Finished creating preprocessing pipeline.
2024-10-14 11:38:10,296:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\wwnku\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ID Siswa', 'Umur', 'Kelas',
                                             'Nilai Teori', 'Nilai Praktik',
                                             'Tugas', 'Rata-rata Nilai',
                                             'Absensi'],
                                    transformer...
                 TransformerWrapper(exclude=None, include=['Nama Siswa'],
                                    transformer=TargetEncoder(cols=['Nama '
                                                                    'Siswa'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-10-14 11:38:10,296:INFO:Creating final display dataframe.
2024-10-14 11:38:10,547:INFO:Setup _display_container:                     Description               Value
0                    Session id                5596
1                        Target    Status Kelulusan
2                   Target type              Binary
3                Target mapping  Gagal: 0, Lulus: 1
4           Original data shape           (100, 13)
5        Transformed data shape           (100, 17)
6   Transformed train set shape            (70, 17)
7    Transformed test set shape            (30, 17)
8              Numeric features                   8
9          Categorical features                   4
10                   Preprocess                True
11              Imputation type              simple
12           Numeric imputation                mean
13       Categorical imputation                mode
14     Maximum one-hot encoding                  25
15              Encoding method                None
16               Fold Generator     StratifiedKFold
17                  Fold Number                  10
18                     CPU Jobs                  -1
19                      Use GPU               False
20               Log Experiment               False
21              Experiment Name    clf-default-name
22                          USI                3ee9
2024-10-14 11:38:10,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-14 11:38:10,692:INFO:setup() successfully completed in 0.98s...............
2024-10-14 11:38:10,692:INFO:Initializing compare_models()
2024-10-14 11:38:10,692:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-10-14 11:38:10,692:INFO:Checking exceptions
2024-10-14 11:38:10,694:INFO:Preparing display monitor
2024-10-14 11:38:10,696:INFO:Initializing Logistic Regression
2024-10-14 11:38:10,696:INFO:Total runtime is 0.0 minutes
2024-10-14 11:38:10,696:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:10,696:INFO:Initializing create_model()
2024-10-14 11:38:10,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:10,696:INFO:Checking exceptions
2024-10-14 11:38:10,696:INFO:Importing libraries
2024-10-14 11:38:10,696:INFO:Copying training dataset
2024-10-14 11:38:10,698:INFO:Defining folds
2024-10-14 11:38:10,698:INFO:Declaring metric variables
2024-10-14 11:38:10,698:INFO:Importing untrained model
2024-10-14 11:38:10,699:INFO:Logistic Regression Imported successfully
2024-10-14 11:38:10,699:INFO:Starting cross validation
2024-10-14 11:38:10,701:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:18,520:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,529:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,534:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,551:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,557:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,559:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:18,563:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,635:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,641:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,642:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,647:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,647:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,653:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,657:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,663:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,669:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,685:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,692:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,697:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,744:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,751:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,756:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,884:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,887:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,890:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,890:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,893:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,896:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,920:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,923:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,926:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:18,931:INFO:Calculating mean and std
2024-10-14 11:38:18,932:INFO:Creating metrics dataframe
2024-10-14 11:38:18,935:INFO:Uploading results into container
2024-10-14 11:38:18,935:INFO:Uploading model into container now
2024-10-14 11:38:18,937:INFO:_master_model_container: 1
2024-10-14 11:38:18,937:INFO:_display_container: 2
2024-10-14 11:38:18,937:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5596, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-10-14 11:38:18,937:INFO:create_model() successfully completed......................................
2024-10-14 11:38:19,177:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:19,177:INFO:Creating metrics dataframe
2024-10-14 11:38:19,180:INFO:Initializing K Neighbors Classifier
2024-10-14 11:38:19,181:INFO:Total runtime is 0.1414098819096883 minutes
2024-10-14 11:38:19,181:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:19,182:INFO:Initializing create_model()
2024-10-14 11:38:19,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:19,182:INFO:Checking exceptions
2024-10-14 11:38:19,182:INFO:Importing libraries
2024-10-14 11:38:19,182:INFO:Copying training dataset
2024-10-14 11:38:19,187:INFO:Defining folds
2024-10-14 11:38:19,187:INFO:Declaring metric variables
2024-10-14 11:38:19,188:INFO:Importing untrained model
2024-10-14 11:38:19,188:INFO:K Neighbors Classifier Imported successfully
2024-10-14 11:38:19,188:INFO:Starting cross validation
2024-10-14 11:38:19,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:19,524:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,524:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,524:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,524:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,524:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,525:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,529:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,530:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,530:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,530:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,532:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,532:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,533:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,533:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,533:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,533:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,533:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,536:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,541:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,546:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,647:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,651:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,651:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,654:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,654:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,658:INFO:Calculating mean and std
2024-10-14 11:38:19,660:INFO:Creating metrics dataframe
2024-10-14 11:38:19,662:INFO:Uploading results into container
2024-10-14 11:38:19,662:INFO:Uploading model into container now
2024-10-14 11:38:19,662:INFO:_master_model_container: 2
2024-10-14 11:38:19,662:INFO:_display_container: 2
2024-10-14 11:38:19,662:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-10-14 11:38:19,662:INFO:create_model() successfully completed......................................
2024-10-14 11:38:19,786:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:19,787:INFO:Creating metrics dataframe
2024-10-14 11:38:19,789:INFO:Initializing Naive Bayes
2024-10-14 11:38:19,789:INFO:Total runtime is 0.15155152479807535 minutes
2024-10-14 11:38:19,789:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:19,790:INFO:Initializing create_model()
2024-10-14 11:38:19,790:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:19,790:INFO:Checking exceptions
2024-10-14 11:38:19,790:INFO:Importing libraries
2024-10-14 11:38:19,790:INFO:Copying training dataset
2024-10-14 11:38:19,794:INFO:Defining folds
2024-10-14 11:38:19,794:INFO:Declaring metric variables
2024-10-14 11:38:19,794:INFO:Importing untrained model
2024-10-14 11:38:19,794:INFO:Naive Bayes Imported successfully
2024-10-14 11:38:19,794:INFO:Starting cross validation
2024-10-14 11:38:19,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:19,967:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,967:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,971:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,971:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,974:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,974:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,976:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,976:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,977:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,978:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,978:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,980:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,982:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,982:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,983:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,984:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,984:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,985:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,985:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,986:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,987:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,988:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,988:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,989:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,989:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:19,990:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:19,993:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,000:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,002:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,003:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,005:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,084:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,086:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,086:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,087:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,088:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,088:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,089:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,090:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,095:INFO:Calculating mean and std
2024-10-14 11:38:20,096:INFO:Creating metrics dataframe
2024-10-14 11:38:20,097:INFO:Uploading results into container
2024-10-14 11:38:20,097:INFO:Uploading model into container now
2024-10-14 11:38:20,097:INFO:_master_model_container: 3
2024-10-14 11:38:20,097:INFO:_display_container: 2
2024-10-14 11:38:20,098:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-10-14 11:38:20,098:INFO:create_model() successfully completed......................................
2024-10-14 11:38:20,222:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:20,222:INFO:Creating metrics dataframe
2024-10-14 11:38:20,224:INFO:Initializing Decision Tree Classifier
2024-10-14 11:38:20,224:INFO:Total runtime is 0.1587934374809265 minutes
2024-10-14 11:38:20,224:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:20,225:INFO:Initializing create_model()
2024-10-14 11:38:20,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:20,225:INFO:Checking exceptions
2024-10-14 11:38:20,225:INFO:Importing libraries
2024-10-14 11:38:20,225:INFO:Copying training dataset
2024-10-14 11:38:20,228:INFO:Defining folds
2024-10-14 11:38:20,228:INFO:Declaring metric variables
2024-10-14 11:38:20,228:INFO:Importing untrained model
2024-10-14 11:38:20,228:INFO:Decision Tree Classifier Imported successfully
2024-10-14 11:38:20,228:INFO:Starting cross validation
2024-10-14 11:38:20,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:20,403:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,403:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,404:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,406:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,407:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,407:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,408:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,408:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,409:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,410:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,410:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,411:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,411:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,412:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,412:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,412:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,413:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,413:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,414:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,415:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,417:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,419:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,421:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,422:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,424:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,427:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,428:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,431:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,432:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,433:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,528:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,530:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,530:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,531:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,531:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,532:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,532:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,537:INFO:Calculating mean and std
2024-10-14 11:38:20,537:INFO:Creating metrics dataframe
2024-10-14 11:38:20,539:INFO:Uploading results into container
2024-10-14 11:38:20,539:INFO:Uploading model into container now
2024-10-14 11:38:20,539:INFO:_master_model_container: 4
2024-10-14 11:38:20,539:INFO:_display_container: 2
2024-10-14 11:38:20,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5596, splitter='best')
2024-10-14 11:38:20,540:INFO:create_model() successfully completed......................................
2024-10-14 11:38:20,666:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:20,667:INFO:Creating metrics dataframe
2024-10-14 11:38:20,669:INFO:Initializing SVM - Linear Kernel
2024-10-14 11:38:20,670:INFO:Total runtime is 0.1662344733874003 minutes
2024-10-14 11:38:20,670:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:20,670:INFO:Initializing create_model()
2024-10-14 11:38:20,670:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:20,670:INFO:Checking exceptions
2024-10-14 11:38:20,670:INFO:Importing libraries
2024-10-14 11:38:20,670:INFO:Copying training dataset
2024-10-14 11:38:20,673:INFO:Defining folds
2024-10-14 11:38:20,673:INFO:Declaring metric variables
2024-10-14 11:38:20,674:INFO:Importing untrained model
2024-10-14 11:38:20,674:INFO:SVM - Linear Kernel Imported successfully
2024-10-14 11:38:20,674:INFO:Starting cross validation
2024-10-14 11:38:20,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:20,851:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,855:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,856:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,858:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,860:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,860:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,860:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,862:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,862:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,863:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,863:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,863:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,864:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,864:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,865:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,866:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,868:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,869:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,870:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,871:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,873:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,875:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,878:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,881:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,890:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,894:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,898:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,986:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,988:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,989:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,991:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:20,992:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,994:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:20,995:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,002:INFO:Calculating mean and std
2024-10-14 11:38:21,002:INFO:Creating metrics dataframe
2024-10-14 11:38:21,004:INFO:Uploading results into container
2024-10-14 11:38:21,004:INFO:Uploading model into container now
2024-10-14 11:38:21,004:INFO:_master_model_container: 5
2024-10-14 11:38:21,004:INFO:_display_container: 2
2024-10-14 11:38:21,005:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5596, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-10-14 11:38:21,005:INFO:create_model() successfully completed......................................
2024-10-14 11:38:21,137:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:21,138:INFO:Creating metrics dataframe
2024-10-14 11:38:21,140:INFO:Initializing Ridge Classifier
2024-10-14 11:38:21,140:INFO:Total runtime is 0.17406410376230874 minutes
2024-10-14 11:38:21,140:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:21,141:INFO:Initializing create_model()
2024-10-14 11:38:21,141:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:21,141:INFO:Checking exceptions
2024-10-14 11:38:21,141:INFO:Importing libraries
2024-10-14 11:38:21,141:INFO:Copying training dataset
2024-10-14 11:38:21,145:INFO:Defining folds
2024-10-14 11:38:21,145:INFO:Declaring metric variables
2024-10-14 11:38:21,146:INFO:Importing untrained model
2024-10-14 11:38:21,146:INFO:Ridge Classifier Imported successfully
2024-10-14 11:38:21,146:INFO:Starting cross validation
2024-10-14 11:38:21,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:21,336:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,337:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,338:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,340:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,341:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,341:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,341:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,342:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,342:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,345:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,347:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,350:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,350:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,351:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,352:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:21,355:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,355:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,355:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,360:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,363:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,457:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,460:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,461:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:21,462:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,466:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,470:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:21,473:INFO:Calculating mean and std
2024-10-14 11:38:21,474:INFO:Creating metrics dataframe
2024-10-14 11:38:21,475:INFO:Uploading results into container
2024-10-14 11:38:21,476:INFO:Uploading model into container now
2024-10-14 11:38:21,476:INFO:_master_model_container: 6
2024-10-14 11:38:21,476:INFO:_display_container: 2
2024-10-14 11:38:21,476:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5596, solver='auto',
                tol=0.0001)
2024-10-14 11:38:21,476:INFO:create_model() successfully completed......................................
2024-10-14 11:38:21,600:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:21,600:INFO:Creating metrics dataframe
2024-10-14 11:38:21,603:INFO:Initializing Random Forest Classifier
2024-10-14 11:38:21,604:INFO:Total runtime is 0.18179011344909665 minutes
2024-10-14 11:38:21,604:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:21,604:INFO:Initializing create_model()
2024-10-14 11:38:21,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:21,604:INFO:Checking exceptions
2024-10-14 11:38:21,604:INFO:Importing libraries
2024-10-14 11:38:21,604:INFO:Copying training dataset
2024-10-14 11:38:21,607:INFO:Defining folds
2024-10-14 11:38:21,607:INFO:Declaring metric variables
2024-10-14 11:38:21,607:INFO:Importing untrained model
2024-10-14 11:38:21,608:INFO:Random Forest Classifier Imported successfully
2024-10-14 11:38:21,608:INFO:Starting cross validation
2024-10-14 11:38:21,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:22,090:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,092:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,093:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,094:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,094:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,094:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,097:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,100:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,100:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,100:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,101:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,103:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,104:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,104:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,107:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,110:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,111:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,127:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,135:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,140:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,142:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,143:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,147:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,147:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,152:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,153:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,158:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,161:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,452:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,452:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,454:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,455:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,456:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,458:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,460:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,466:INFO:Calculating mean and std
2024-10-14 11:38:22,467:INFO:Creating metrics dataframe
2024-10-14 11:38:22,470:INFO:Uploading results into container
2024-10-14 11:38:22,471:INFO:Uploading model into container now
2024-10-14 11:38:22,471:INFO:_master_model_container: 7
2024-10-14 11:38:22,471:INFO:_display_container: 2
2024-10-14 11:38:22,472:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5596, verbose=0,
                       warm_start=False)
2024-10-14 11:38:22,472:INFO:create_model() successfully completed......................................
2024-10-14 11:38:22,613:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:22,613:INFO:Creating metrics dataframe
2024-10-14 11:38:22,617:INFO:Initializing Quadratic Discriminant Analysis
2024-10-14 11:38:22,618:INFO:Total runtime is 0.19869183301925655 minutes
2024-10-14 11:38:22,618:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:22,619:INFO:Initializing create_model()
2024-10-14 11:38:22,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:22,619:INFO:Checking exceptions
2024-10-14 11:38:22,619:INFO:Importing libraries
2024-10-14 11:38:22,619:INFO:Copying training dataset
2024-10-14 11:38:22,625:INFO:Defining folds
2024-10-14 11:38:22,625:INFO:Declaring metric variables
2024-10-14 11:38:22,625:INFO:Importing untrained model
2024-10-14 11:38:22,625:INFO:Quadratic Discriminant Analysis Imported successfully
2024-10-14 11:38:22,625:INFO:Starting cross validation
2024-10-14 11:38:22,627:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:22,765:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,766:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,767:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,768:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,773:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,788:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,788:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,833:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,837:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,837:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,837:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,838:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,838:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,840:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,845:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,845:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,845:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,847:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,848:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,848:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,848:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,851:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,851:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,852:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,854:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,855:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,858:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,860:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,862:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,862:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,866:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,868:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,869:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,872:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,873:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,874:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,876:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,879:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,947:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,948:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-10-14 11:38:22,993:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,993:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,995:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,997:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,998:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,998:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:22,999:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:22,999:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,011:INFO:Calculating mean and std
2024-10-14 11:38:23,011:INFO:Creating metrics dataframe
2024-10-14 11:38:23,013:INFO:Uploading results into container
2024-10-14 11:38:23,014:INFO:Uploading model into container now
2024-10-14 11:38:23,014:INFO:_master_model_container: 8
2024-10-14 11:38:23,015:INFO:_display_container: 2
2024-10-14 11:38:23,015:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-10-14 11:38:23,015:INFO:create_model() successfully completed......................................
2024-10-14 11:38:23,197:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:23,198:INFO:Creating metrics dataframe
2024-10-14 11:38:23,202:INFO:Initializing Ada Boost Classifier
2024-10-14 11:38:23,203:INFO:Total runtime is 0.2084498325983683 minutes
2024-10-14 11:38:23,203:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:23,204:INFO:Initializing create_model()
2024-10-14 11:38:23,204:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:23,204:INFO:Checking exceptions
2024-10-14 11:38:23,204:INFO:Importing libraries
2024-10-14 11:38:23,204:INFO:Copying training dataset
2024-10-14 11:38:23,209:INFO:Defining folds
2024-10-14 11:38:23,209:INFO:Declaring metric variables
2024-10-14 11:38:23,209:INFO:Importing untrained model
2024-10-14 11:38:23,209:INFO:Ada Boost Classifier Imported successfully
2024-10-14 11:38:23,210:INFO:Starting cross validation
2024-10-14 11:38:23,211:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:23,383:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,388:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,388:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,389:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,391:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,391:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,398:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,414:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,456:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,460:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,462:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,463:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,467:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,468:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,469:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,469:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,472:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,473:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,473:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,473:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,474:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,474:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,479:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,479:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,479:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,480:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,483:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,484:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,493:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,496:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,501:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,551:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,553:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:23,591:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,595:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,597:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,597:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,600:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,604:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:23,609:INFO:Calculating mean and std
2024-10-14 11:38:23,610:INFO:Creating metrics dataframe
2024-10-14 11:38:23,611:INFO:Uploading results into container
2024-10-14 11:38:23,612:INFO:Uploading model into container now
2024-10-14 11:38:23,613:INFO:_master_model_container: 9
2024-10-14 11:38:23,613:INFO:_display_container: 2
2024-10-14 11:38:23,613:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5596)
2024-10-14 11:38:23,613:INFO:create_model() successfully completed......................................
2024-10-14 11:38:23,744:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:23,746:INFO:Creating metrics dataframe
2024-10-14 11:38:23,748:INFO:Initializing Gradient Boosting Classifier
2024-10-14 11:38:23,748:INFO:Total runtime is 0.21752794583638507 minutes
2024-10-14 11:38:23,749:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:23,749:INFO:Initializing create_model()
2024-10-14 11:38:23,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:23,749:INFO:Checking exceptions
2024-10-14 11:38:23,749:INFO:Importing libraries
2024-10-14 11:38:23,749:INFO:Copying training dataset
2024-10-14 11:38:23,752:INFO:Defining folds
2024-10-14 11:38:23,752:INFO:Declaring metric variables
2024-10-14 11:38:23,754:INFO:Importing untrained model
2024-10-14 11:38:23,754:INFO:Gradient Boosting Classifier Imported successfully
2024-10-14 11:38:23,754:INFO:Starting cross validation
2024-10-14 11:38:23,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:24,179:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,180:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,182:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,183:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,185:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,185:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,185:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,187:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,187:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,187:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,188:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,189:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,190:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,190:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,192:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,192:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,193:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,193:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,194:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,196:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,196:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,199:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,199:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,200:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,200:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,202:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,203:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,205:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,208:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,213:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,214:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,216:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,370:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,373:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,375:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,377:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,384:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,387:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,388:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,390:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,394:INFO:Calculating mean and std
2024-10-14 11:38:24,395:INFO:Creating metrics dataframe
2024-10-14 11:38:24,396:INFO:Uploading results into container
2024-10-14 11:38:24,397:INFO:Uploading model into container now
2024-10-14 11:38:24,397:INFO:_master_model_container: 10
2024-10-14 11:38:24,398:INFO:_display_container: 2
2024-10-14 11:38:24,399:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5596, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-10-14 11:38:24,399:INFO:create_model() successfully completed......................................
2024-10-14 11:38:24,528:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:24,528:INFO:Creating metrics dataframe
2024-10-14 11:38:24,530:INFO:Initializing Linear Discriminant Analysis
2024-10-14 11:38:24,530:INFO:Total runtime is 0.23056453466415402 minutes
2024-10-14 11:38:24,530:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:24,530:INFO:Initializing create_model()
2024-10-14 11:38:24,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:24,530:INFO:Checking exceptions
2024-10-14 11:38:24,530:INFO:Importing libraries
2024-10-14 11:38:24,530:INFO:Copying training dataset
2024-10-14 11:38:24,533:INFO:Defining folds
2024-10-14 11:38:24,533:INFO:Declaring metric variables
2024-10-14 11:38:24,533:INFO:Importing untrained model
2024-10-14 11:38:24,534:INFO:Linear Discriminant Analysis Imported successfully
2024-10-14 11:38:24,534:INFO:Starting cross validation
2024-10-14 11:38:24,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:24,727:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,731:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,732:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,733:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,735:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,736:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,737:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,737:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,737:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,737:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,739:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,740:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,742:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,742:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,742:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,743:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,743:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,744:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,744:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,744:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,746:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,746:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,747:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,748:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,750:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,753:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,855:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,861:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,862:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,864:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,864:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,867:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,869:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:24,871:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:24,876:INFO:Calculating mean and std
2024-10-14 11:38:24,878:INFO:Creating metrics dataframe
2024-10-14 11:38:24,881:INFO:Uploading results into container
2024-10-14 11:38:24,883:INFO:Uploading model into container now
2024-10-14 11:38:24,883:INFO:_master_model_container: 11
2024-10-14 11:38:24,883:INFO:_display_container: 2
2024-10-14 11:38:24,884:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-10-14 11:38:24,884:INFO:create_model() successfully completed......................................
2024-10-14 11:38:25,100:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:25,100:INFO:Creating metrics dataframe
2024-10-14 11:38:25,106:INFO:Initializing Extra Trees Classifier
2024-10-14 11:38:25,106:INFO:Total runtime is 0.24016193151473997 minutes
2024-10-14 11:38:25,106:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:25,107:INFO:Initializing create_model()
2024-10-14 11:38:25,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:25,107:INFO:Checking exceptions
2024-10-14 11:38:25,107:INFO:Importing libraries
2024-10-14 11:38:25,107:INFO:Copying training dataset
2024-10-14 11:38:25,111:INFO:Defining folds
2024-10-14 11:38:25,111:INFO:Declaring metric variables
2024-10-14 11:38:25,111:INFO:Importing untrained model
2024-10-14 11:38:25,112:INFO:Extra Trees Classifier Imported successfully
2024-10-14 11:38:25,112:INFO:Starting cross validation
2024-10-14 11:38:25,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:25,824:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,829:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,831:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,835:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,854:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,859:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,861:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,864:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,874:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,880:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,884:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,886:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,888:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,892:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,892:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,894:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,895:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,898:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,898:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,934:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,940:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,942:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,945:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,981:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,987:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:25,993:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:25,999:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,109:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,116:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,118:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:26,122:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,436:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,439:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,441:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,441:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:26,443:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,444:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,446:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:26,449:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:26,454:INFO:Calculating mean and std
2024-10-14 11:38:26,455:INFO:Creating metrics dataframe
2024-10-14 11:38:26,458:INFO:Uploading results into container
2024-10-14 11:38:26,459:INFO:Uploading model into container now
2024-10-14 11:38:26,459:INFO:_master_model_container: 12
2024-10-14 11:38:26,459:INFO:_display_container: 2
2024-10-14 11:38:26,460:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5596, verbose=0,
                     warm_start=False)
2024-10-14 11:38:26,460:INFO:create_model() successfully completed......................................
2024-10-14 11:38:26,678:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:26,678:INFO:Creating metrics dataframe
2024-10-14 11:38:26,681:INFO:Initializing Light Gradient Boosting Machine
2024-10-14 11:38:26,681:INFO:Total runtime is 0.26641365687052404 minutes
2024-10-14 11:38:26,681:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:26,681:INFO:Initializing create_model()
2024-10-14 11:38:26,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:26,681:INFO:Checking exceptions
2024-10-14 11:38:26,681:INFO:Importing libraries
2024-10-14 11:38:26,682:INFO:Copying training dataset
2024-10-14 11:38:26,686:INFO:Defining folds
2024-10-14 11:38:26,686:INFO:Declaring metric variables
2024-10-14 11:38:26,686:INFO:Importing untrained model
2024-10-14 11:38:26,687:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-14 11:38:26,687:INFO:Starting cross validation
2024-10-14 11:38:26,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:27,234:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,239:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,242:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,244:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,247:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,256:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,265:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,275:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,276:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,280:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,280:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,286:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,396:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,402:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,404:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,407:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,409:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,413:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,505:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,510:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,513:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,516:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,521:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,525:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,618:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,622:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,625:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,627:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,630:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,634:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:27,644:INFO:Calculating mean and std
2024-10-14 11:38:27,645:INFO:Creating metrics dataframe
2024-10-14 11:38:27,648:INFO:Uploading results into container
2024-10-14 11:38:27,649:INFO:Uploading model into container now
2024-10-14 11:38:27,650:INFO:_master_model_container: 13
2024-10-14 11:38:27,650:INFO:_display_container: 2
2024-10-14 11:38:27,651:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5596, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-10-14 11:38:27,651:INFO:create_model() successfully completed......................................
2024-10-14 11:38:27,861:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:27,861:INFO:Creating metrics dataframe
2024-10-14 11:38:27,863:INFO:Initializing Dummy Classifier
2024-10-14 11:38:27,863:INFO:Total runtime is 0.28611956834793084 minutes
2024-10-14 11:38:27,864:INFO:SubProcess create_model() called ==================================
2024-10-14 11:38:27,864:INFO:Initializing create_model()
2024-10-14 11:38:27,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000201E3F21390>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:27,865:INFO:Checking exceptions
2024-10-14 11:38:27,865:INFO:Importing libraries
2024-10-14 11:38:27,865:INFO:Copying training dataset
2024-10-14 11:38:27,869:INFO:Defining folds
2024-10-14 11:38:27,869:INFO:Declaring metric variables
2024-10-14 11:38:27,870:INFO:Importing untrained model
2024-10-14 11:38:27,870:INFO:Dummy Classifier Imported successfully
2024-10-14 11:38:27,870:INFO:Starting cross validation
2024-10-14 11:38:27,872:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-14 11:38:28,070:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,075:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,075:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,077:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,079:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,080:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,082:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,086:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,087:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,092:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,096:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,097:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,099:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,102:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,104:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,104:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,115:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,119:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,119:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,121:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,124:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,125:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,128:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,131:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,135:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,140:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,142:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,145:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,146:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,152:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,155:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,156:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,247:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,250:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,251:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,254:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,254:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,256:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,256:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-10-14 11:38:28,258:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Lulus') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-10-14 11:38:28,263:INFO:Calculating mean and std
2024-10-14 11:38:28,264:INFO:Creating metrics dataframe
2024-10-14 11:38:28,267:INFO:Uploading results into container
2024-10-14 11:38:28,267:INFO:Uploading model into container now
2024-10-14 11:38:28,268:INFO:_master_model_container: 14
2024-10-14 11:38:28,268:INFO:_display_container: 2
2024-10-14 11:38:28,269:INFO:DummyClassifier(constant=None, random_state=5596, strategy='prior')
2024-10-14 11:38:28,269:INFO:create_model() successfully completed......................................
2024-10-14 11:38:28,413:INFO:SubProcess create_model() end ==================================
2024-10-14 11:38:28,413:INFO:Creating metrics dataframe
2024-10-14 11:38:28,419:WARNING:D:\REPLICA\.venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-10-14 11:38:28,421:INFO:Initializing create_model()
2024-10-14 11:38:28,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000201E3EDDB90>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5596), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-14 11:38:28,421:INFO:Checking exceptions
2024-10-14 11:38:28,422:INFO:Importing libraries
2024-10-14 11:38:28,422:INFO:Copying training dataset
2024-10-14 11:38:28,425:INFO:Defining folds
2024-10-14 11:38:28,425:INFO:Declaring metric variables
2024-10-14 11:38:28,425:INFO:Importing untrained model
2024-10-14 11:38:28,425:INFO:Declaring custom model
2024-10-14 11:38:28,425:INFO:Ada Boost Classifier Imported successfully
2024-10-14 11:38:28,427:INFO:Cross validation set to False
2024-10-14 11:38:28,427:INFO:Fitting Model
2024-10-14 11:38:28,491:WARNING:D:\REPLICA\.venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-10-14 11:38:28,494:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5596)
2024-10-14 11:38:28,494:INFO:create_model() successfully completed......................................
2024-10-14 11:38:28,665:INFO:_master_model_container: 14
2024-10-14 11:38:28,665:INFO:_display_container: 2
2024-10-14 11:38:28,666:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5596)
2024-10-14 11:38:28,666:INFO:compare_models() successfully completed......................................
2024-10-14 11:38:38,753:INFO:Initializing save_model()
2024-10-14 11:38:38,753:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5596), model_name=./hasil_model/best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\wwnku\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ID Siswa', 'Umur', 'Kelas',
                                             'Nilai Teori', 'Nilai Praktik',
                                             'Tugas', 'Rata-rata Nilai',
                                             'Absensi'],
                                    transformer...
                 TransformerWrapper(exclude=None, include=['Nama Siswa'],
                                    transformer=TargetEncoder(cols=['Nama '
                                                                    'Siswa'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-10-14 11:38:38,753:INFO:Adding model into prep_pipe
2024-10-14 11:38:38,764:INFO:./hasil_model/best_model.pkl saved in current working directory
2024-10-14 11:38:38,778:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['ID Siswa', 'Umur', 'Kelas',
                                             'Nilai Teori', 'Nilai Praktik',
                                             'Tugas', 'Rata-rata Nilai',
                                             'Absensi'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=5596))],
         verbose=False)
2024-10-14 11:38:38,778:INFO:save_model() successfully completed......................................
2024-10-14 12:07:41,772:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:07:41,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:07:41,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:07:41,773:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:18,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:18,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:18,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:18,544:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:45,772:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:45,772:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:45,772:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:08:45,772:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:10:46,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:10:46,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:10:46,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:10:46,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:11:08,448:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:11:08,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:11:08,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 12:11:08,449:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:07:11,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:07:11,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:07:11,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-14 21:07:11,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
